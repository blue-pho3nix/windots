{
	// PLEASE MODIFY THIS FILE WITH YOUR PREFERRED APPLICATIONS / PACKAGES / TOOLS
	// BEFORE RUNNING `Setup.ps` SCRIPT!! YOU CAN ADD OR REMOVE SPECIFIC SETTINGS BELOW:
	"$schema": "https://raw.githubusercontent.com/jacquindev/windots/refs/heads/main/schema.json",
	"environmentVariable": [
		// Modify the below key-pair values according to your paths
		{ "commandName": "eza", "environmentKey": "EZA_CONFIG_DIR", "environmentValue": "C:\\Users\\jqnhi\\.config\\eza" },
		{ "commandName": "komorebic", "environmentKey": "KOMOREBI_CONFIG_HOME", "environmentValue": "C:\\Users\\jqnhi\\.config\\komorebi" },
		{ "commandName": "yazi", "environmentKey": "YAZI_FILE_ONE", "environmentValue": "C:\\Program Files\\Git\\usr\\bin\\file.exe" },
		{ "commandName": "yazi", "environmentKey": "YAZI_CONFIG_HOME", "environmentValue": "C:\\Users\\jqnhi\\.config\\yazi" },
		{ "commandName": "vagrant", "environmentKey": "VAGRANT_DEFAULT_PROVIDER", "environmentValue": "virtualbox" }
	],
	"installSource": {
		"winget": {
			"autoInstall": true,
			"packageList": [
				// All about Git
				{ "packageId": "Git.Git" },
				{ "packageId": "GitHub.GitHubDesktop" },
				{ "packageId": "Axosoft.GitKraken" },

				// Must-haves
				{ "packageId": "Microsoft.PowerShell" },
				// { "packageId": "Microsoft.WindowsTerminal" },
				{ "packageId": "Microsoft.WindowsTerminal.Preview" },

				// Shell supports
				{ "packageId": "chrisant996.Clink" },
				{ "packageId": "gerardog.gsudo" },
				{ "packageId": "JanDeDobbeleer.OhMyPosh" },

				// Main Python package
				{ "packageId": "Python.Python.3.13" },

				// Development Tools
				{ "packageId": "ImageMagick.ImageMagick" },
				{ "packageId": "Postman.Postman" },

				// Editors
				{ "packageId": "JetBrains.IntelliJIDEA.Community" },
				{ "packageId": "Microsoft.VisualStudioCode" },
				{ "packageId": "Notepad++.Notepad++" },
				{ "packageId": "Obsidian.Obsidian" },

				// Productivity
				{ "packageId": "Microsoft.PowerToys" },
				{ "packageId": "9NRX63209R7B", "packageSource": "msstore" }, // Outlook for Windows
				{ "packageId": "9NHT9RB2F4HD", "packageSource": "msstore" }, // Microsoft Copilot

				// Containerization / Virtualization
				{ "packageId": "Docker.DockerDesktop" },
				{ "packageId": "Oracle.VirtualBox" },
				{ "packageId": "Hashicorp.Vagrant" },

				// Paid services
				{ "packageId": "Symless.Synergy" },
				{ "packageId": "Proton.ProtonVPN" },
				{ "packageId": "Stardock.Start11" },

				// Windows Tweak Managers
				{ "packageId": "AmN.yasb" },
				{ "packageId": "LGUG2Z.komorebi" },
				{ "packageId": "LGUG2Z.whkd" },
				{ "packageId": "Rainmeter.Rainmeter" },
				{ "packageId": "rocksdanister.LivelyWallpaper" }
			],
			"additionalArgs": ["--exact", "--silent", "--accept-package-agreements", "--accept-source-agreements"]
		},
		"choco": {
			"autoInstall": true,
			"packageList": [
				// add "packageVersion" field to install a specific version of a package, e.g.:
				// { "packageName": "virtualbox", "packageVersion": "7.1.4" }
				{ "packageName": "choco-cleaner" },
				{ "packageName": "gpg4win" },
				{ "packageName": "vmwareworkstation" }
			],
			"additionalArgs": ["-y", "-r", "--no-progress"]
		},
		"scoop": {
			"autoInstall": true,
			"bucketList": [
				// { "bucketName": "dorado", "bucketRepo": "https://github.com/chawyehsu/dorado" },
				{ "bucketName": "extras" },
				{ "bucketName": "sysinternals" }
			],
			"packageList": [
				// Prerequisites of scoop (run `scoop checkup`)
				{ "packageName": "aria2" },
				{ "packageName": "cacert" },
				{ "packageName": "innounp" },
				{ "packageName": "wixtoolset" },

				// Scoop Extras
				{ "packageName": "scoop-completion" },
				{ "packageName": "scoop-search" },

				// Git helpers
				{ "packageName": "bfg" },
				{ "packageName": "delta" },
				{ "packageName": "gh" },
				{ "packageName": "git-aliases" },
				{ "packageName": "git-crypt" },
				{ "packageName": "git-filter-repo" },
				{ "packageName": "git-lfs" },
				{ "packageName": "git-sizer" },
				{ "packageName": "gitleaks" },
				{ "packageName": "lazygit" },

				// CLIs / Utils
				{ "packageName": "bat" },
				{ "packageName": "btop" },
				{ "packageName": "charm-gum" },
				{ "packageName": "eza" },
				{ "packageName": "fastfetch" },
				{ "packageName": "fd" },
				{ "packageName": "ffmpeg" },
				{ "packageName": "fzf" },
				{ "packageName": "jq" },
				{ "packageName": "mise" },
				{ "packageName": "poppler" },
				{ "packageName": "shfmt" },
				{ "packageName": "speedtest-cli" },
				{ "packageName": "spicetify-cli" },
				{ "packageName": "spotify-tui" },
				{ "packageName": "starship" },
				// { "packageName": "vfox" },
				{ "packageName": "wget" },
				{ "packageName": "yazi" },
				{ "packageName": "yq" },
				{ "packageName": "zoxide" },

				// CI/CD tools
				{ "packageName": "restic" },
				{ "packageName": "task" },

				// Sysinternal Suites
				{ "packageName": "process-explorer", "packageScope": "global" },
				{ "packageName": "pskill", "packageScope": "global" },
				{ "packageName": "pslist", "packageScope": "global" },
				{ "packageName": "psservice", "packageScope": "global" }

			],
			"additionalArgs": []
		}
	},
	"packageAddon": [
		// Add / Remove addons list here with the following format:
		// To install the addons, please set `"install": true`
		{
			"commandName": "gh",
			"commandCheck": "gh extension list",
			"commandInvoke": "gh extension install",
			"addonList": [
				"dlvhdr/gh-dash",
				"yuler/gh-download",
				"seachicken/gh-poi",
				"Link-/gh-token",
				"yusukebe/gh-markdown-preview",
				"Shresht7/gh-license"
			],
			"install": false
		},
		{
			"commandName": "vagrant",
			"commandCheck": "vagrant plugin list",
			"commandInvoke": "vagrant plugin install",
			"addonList": [
				"vagrant-hostmanager",
				"vagrant-timezone",
				"vagrant-reload"
			],
			"install": false
		},
		{
			"commandName": "pip",
			"commandCheck": "pip list",
			"commandInvoke": "pip install",
			"addonList": [
				"pywin32",
				"PyYAML"
			],
			"install": false
		}
	],
	"powershell": {
		"psmodule": {
			"install": true,
			"moduleList": [
				// add "moduleVersion" field if you want to install a specific version of module, e.g.:
				// { "moduleName": "DockerCompletion", "moduleVersion": "1.2300.0.230804" }
				{ "moduleName": "BurntToast" },
				{ "moduleName": "CompletionPredictor" },
				{ "moduleName": "DockerCompletion" },
				{ "moduleName": "DotNetVersionLister" },
				{ "moduleName": "Microsoft.PowerShell.SecretManagement" },
				{ "moduleName": "Microsoft.PowerShell.SecretStore" },
				{ "moduleName": "npm-completion" },
				{ "moduleName": "posh-git" },
				{ "moduleName": "powershell-yaml" },
				{ "moduleName": "PSFzf" },
				{ "moduleName": "PSParseHTML" },
				{ "moduleName": "PSScriptAnalyzer" },
				{ "moduleName": "PSScriptTools" },
				{ "moduleName": "PSToml" },
				{ "moduleName": "Terminal-Icons" }
			],
			"additionalArgs": ["-Scope", "CurrentUser", "-Force", "-AllowClobber"]
		},
		// PowerShell Experimental Features (not recommended to use in production environment!)
		// For more information: https://learn.microsoft.com/en-us/powershell/scripting/learn/experimental-features?view=powershell-7.5
		// `Get-ExperimentalFeature`
		"psexperimentalfeature": {
			"enable": true,
			"featureList": [
				"PSNativeWindowsTildeExpansion",
				"PSSubsystemPluginModule"
			]
		}
	}
}
