{
	"$schema": "https://json-schema.org/draft-04/schema#",
	"$id": "https://example.com/packages.schema.json",
	"title": "Applications / Packages",
	"description": "A schema for defining applications or packages to install on Windows machine.",
	"required": ["package_source"],
	"type": "object",
	"properties": {
		"environment_variables": {
			"type": "array",
			"items": {
				"type": "object",
				"required": ["value", "path", "command"],
				"properties": {
					"value": { "type": "string" },
					"path": { "type": "string" },
					"command": { "type": "string" }
				},
				"uniqueItems": true
			}
		},
		"package_source": {
			"description": "The source (command line) to get package from",
			"type": "object",
			"properties": {
				"winget": {
					"type": "object",
					"description": "Install applications using `winget` cli.",
					"properties": {
						"auto_install": {
							"type": "boolean",
							"description": "Whether or not automatically install `winget` cli and install packages from the list if it is not found."
						},
						"packages": {
							"type": "array",
							"description": "List of winget packages' IDs to install.",
							"uniqueItems": true
						}
					}
				},
				"choco": {
					"type": "object",
					"description": "Install applications using `choco` cli: To add programs for developers which will be available for all users",
					"properties": {
						"auto_install": {
							"type": "boolean",
							"description": "Whether or not automatically install `choco` cli and install packages from the list if it is not found."
						},
						"packages": {
							"type": "array",
							"description": "List of choco packages' names to install.",
							"uniqueItems": true
						}
					}
				},
				"scoop": {
					"type": "object",
					"description": "Install applications using `scoop` cli: To add packages which installed for current user.",
					"required": ["auto_install", "packages"],
					"properties": {
						"auto_install": {
							"type": "boolean",
							"description": "Whether or not automatically install `scoop` cli and install packages from the list if it is not found."
						},
						"packages": {
							"type": "array",
							"description": "List of scoop packages' names to install.",
							"uniqueItems": true
						},
						"buckets": {
							"type": "array",
							"description": "List of scoop buckets to add.",
							"uniqueItems": true
						}
					}
				}
			}
		},
		"package_plugins": {
			"description": "Addons for installed packages",
			"type": "array",
			"items": {
				"type": "object",
				"required": ["invoke_command", "check_command", "plugins"],
				"properties": {
					"name": { "type": "string" },
					"invoke_command": {
						"type": "string",
						"description": "Command to invoke to install an addon"
					},
					"check_command": {
						"type": "string",
						"description": "Command to if an addon is installed or not"
					},
					"install": {
						"type": "boolean",
						"description": "Whether or not to install provided plugins/extensions for application in the list"
					},
					"plugins": {
						"type": "array",
						"properties": {
							"plugin_name": { "type": "string" },
							"plugin_full_name": { "type": "string" },
							"version": { "type": "string" }
						},
						"required": ["plugin_full_name", "install"]
					}
				},
				"uniqueItems": true
			}
		},
		"powershell_modules": {
			"type": "object",
			"description": "Powershell Core",
			"uniqueItems": true,
			"required": ["modules", "install"],
			"properties": {
				"install": {
					"type": "boolean",
					"description": "Whether or not to install powershell modules in provided list"
				},
				"modules": {
					"type": "array",
					"description": "List of powershell modules"
				}
			}
		}
	}
}
